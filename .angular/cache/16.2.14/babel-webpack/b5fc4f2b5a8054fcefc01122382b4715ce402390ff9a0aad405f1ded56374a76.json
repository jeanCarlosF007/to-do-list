{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { first } from 'rxjs';\nexport let ListChoresComponent = class ListChoresComponent {\n  constructor(http, app, component, ts) {\n    this.http = http;\n    this.app = app;\n    this.apiKey = `78adf76c3d8542de941b5538c527a637`;\n    this.apiUrl = `https://crudcrud.com/api/${this.apiKey}/chores`;\n    this.editionForm = new FormGroup({\n      title: new FormControl(''),\n      category: new FormControl(''),\n      time: new FormControl('')\n    });\n    this.actualId = '';\n  }\n  // private getChores(): void {\n  //   this.http.get<IChore[]>(this.apiUrl)\n  //     .pipe(first())\n  //     .subscribe({\n  //       next: (res) => {\n  //         this.chores = res;\n  //         console.log(res);\n  //       },\n  //       error: (err) => { console.log(err); },\n  //       complete: () => { }\n  //     })\n  // }\n  deleteChore(id) {\n    const url = `${this.apiUrl}/${id}`;\n    this.http.delete(url).pipe(first()).subscribe({\n      complete: () => {\n        this.getChores();\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n    alert(\"Tarefa deletada com sucesso!\");\n  }\n  getDataToEditForm(id) {\n    this.http.get(`${this.apiUrl}/${id}`).pipe(first()).subscribe({\n      next: res => {\n        const chore = {\n          _id: id,\n          title: res.title,\n          category: res.category,\n          time: res.time\n        };\n        this.editionForm.patchValue(chore);\n        this.actualId = id;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n    // const chore: IChore = this.editionForm.getRawValue();\n    // console.log(chore._id)\n  }\n\n  updateChore() {\n    const chore = this.editionForm.getRawValue();\n    this.http.put(`${this.apiUrl}/${this.actualId}`, chore).pipe(first()).subscribe({\n      next: response => {\n        console.log(response);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n    alert(\"Tarefa atualizada com sucesso!\");\n  }\n  ngOnInit() {\n    // this.getChores();\n  }\n};\nListChoresComponent = __decorate([Component({\n  selector: 'app-list-chores',\n  templateUrl: './list-chores.component.html',\n  styleUrls: ['./list-chores.component.css']\n})], ListChoresComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","first","ListChoresComponent","constructor","http","app","component","ts","apiKey","apiUrl","editionForm","title","category","time","actualId","deleteChore","id","url","delete","pipe","subscribe","complete","getChores","error","err","console","log","alert","getDataToEditForm","get","next","res","chore","_id","patchValue","updateChore","getRawValue","put","response","ngOnInit","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/jean/Documents/ADA/modulo5-to-do/src/app/components/list-chores/list-chores.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { first } from 'rxjs';\nimport { IChore } from 'src/app/models/chores-list.model';\n\n@Component({\n  selector: 'app-list-chores',\n  templateUrl: './list-chores.component.html',\n  styleUrls: ['./list-chores.component.css']\n})\nexport class ListChoresComponent implements OnInit {\n\n  apiKey = `78adf76c3d8542de941b5538c527a637`;\n  apiUrl = `https://crudcrud.com/api/${this.apiKey}/chores`;\n\n  constructor(private http: HttpClient, private app.component.ts) { }\n\n  chores?: IChore[];\n\n  // private getChores(): void {\n  //   this.http.get<IChore[]>(this.apiUrl)\n  //     .pipe(first())\n  //     .subscribe({\n  //       next: (res) => {\n  //         this.chores = res;\n  //         console.log(res);\n  //       },\n  //       error: (err) => { console.log(err); },\n  //       complete: () => { }\n  //     })\n  // }\n\n  deleteChore(id: string): void {\n    const url = `${this.apiUrl}/${id}`;\n    this.http.delete(url)\n      .pipe(first())\n      .subscribe({\n        complete: () => {\n          this.getChores();\n        },\n        error: (err) => {\n          console.log(err);\n        }\n      })\n    alert(\"Tarefa deletada com sucesso!\");\n  }\n\n  editionForm: FormGroup = new FormGroup({\n    title: new FormControl(''),\n    category: new FormControl(''),\n    time: new FormControl('')\n  });\n\n  actualId: string = '';\n\n  getDataToEditForm(id: string) {\n    this.http.get<IChore>(`${this.apiUrl}/${id}`)\n      .pipe(first())\n      .subscribe({\n        next: (res) => {\n          const chore = {\n            _id: id,\n            title: res.title,\n            category: res.category,\n            time: res.time\n          };\n          this.editionForm.patchValue(chore);\n          this.actualId = id;\n        },\n        error: (err) => {\n          console.log(err);\n        }\n      })\n    // const chore: IChore = this.editionForm.getRawValue();\n    // console.log(chore._id)\n  }\n\n  updateChore(): void {\n    const chore: IChore = this.editionForm.getRawValue();\n    this.http.put(`${this.apiUrl}/${this.actualId}`, chore)\n      .pipe(first())\n      .subscribe({\n        next: (response) => {\n          console.log(response);\n        },\n        error: (err) => {\n          console.log(err);\n        }\n      });\n    alert(\"Tarefa atualizada com sucesso!\");\n  }\n\n  ngOnInit(): void {\n    // this.getChores();\n  }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}