{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class CreateChoreComponent {\n  constructor(http) {\n    this.http = http;\n    this.newChoreCreated = new EventEmitter();\n    this.apiKey = `78adf76c3d8542de941b5538c527a637`;\n    this.apiUrl = `https://crudcrud.com/api/${this.apiKey}/chores`;\n    this.choresForm = new FormGroup({\n      title: new FormControl('', [Validators.required]),\n      category: new FormControl('', [Validators.required]),\n      time: new FormControl(this.getTimeNow(), [Validators.required])\n    });\n  }\n  createChore() {\n    const chore = this.choresForm.getRawValue();\n    // this.http.post(this.apiUrl, chore)\n    //   .pipe(first())\n    //   .subscribe({\n    //     next: (response) => {\n    //       console.log(response);\n    //     },\n    //     error: (err) => {\n    //       console.log(err);\n    //     }\n    //   });\n    this.newChoreCreated.emit(chore);\n    alert(\"Tarefa adicionada com sucesso!\");\n  }\n  getTimeNow() {\n    const time = new Date();\n    const hour = time.getHours();\n    const minutes = time.getMinutes();\n    const convertedTime = `${hour}:${minutes}`;\n    return convertedTime;\n  }\n  static #_ = this.ɵfac = function CreateChoreComponent_Factory(t) {\n    return new (t || CreateChoreComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateChoreComponent,\n    selectors: [[\"app-create-chore\"]],\n    outputs: {\n      newChoreCreated: \"newChoreCreated\"\n    },\n    decls: 20,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"card\", \"mt-5\", \"mx-auto\", \"w-50\", \"p-3\"], [1, \"card-header\", \"d-flex\", \"justify-content-center\", \"fs-1\", \"mb-3\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"chore-title\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"chore-title\", \"placeholder\", \"Digite o t\\u00EDtulo da tarefa\", \"formControlName\", \"title\", 1, \"form-control\"], [\"for\", \"chore-category\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"chore-category\", \"placeholder\", \"Digite a categoria da tarefa\", \"formControlName\", \"category\", 1, \"form-control\"], [\"for\", \"chore-time\", 1, \"form-label\"], [\"type\", \"time\", \"id\", \"chore-time\", \"formControlName\", \"time\", 1, \"form-control\"], [1, \"btn\", \"btn-success\"]],\n    template: function CreateChoreComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h5\", 2);\n        i0.ɵɵtext(3, \"Gerencie seu dia\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateChoreComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.createChore();\n        });\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"T\\u00EDtulo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 8);\n        i0.ɵɵtext(12, \"Categoria\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 5)(15, \"label\", 10);\n        i0.ɵɵtext(16, \"Hora\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 12);\n        i0.ɵɵtext(19, \"Adicionar tarefa\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.choresForm);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","FormGroup","FormControl","Validators","CreateChoreComponent","constructor","http","newChoreCreated","apiKey","apiUrl","choresForm","title","required","category","time","getTimeNow","createChore","chore","getRawValue","emit","alert","Date","hour","getHours","minutes","getMinutes","convertedTime","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","outputs","decls","vars","consts","template","CreateChoreComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CreateChoreComponent_Template_form_ngSubmit_5_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["/home/jean/Documents/ADA/modulo5-to-do/src/app/components/create-chore/create-chore.component.ts","/home/jean/Documents/ADA/modulo5-to-do/src/app/components/create-chore/create-chore.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { first } from 'rxjs';\nimport { IChore } from 'src/app/models/chores-list.model';\n\n@Component({\n  selector: 'app-create-chore',\n  templateUrl: './create-chore.component.html',\n  styleUrls: ['./create-chore.component.css']\n})\nexport class CreateChoreComponent {\n\n  @Output() newChoreCreated = new EventEmitter<IChore>();\n\n  apiKey = `78adf76c3d8542de941b5538c527a637`;\n  apiUrl = `https://crudcrud.com/api/${this.apiKey}/chores`;\n\n  constructor(private http: HttpClient) { }\n\n  choresForm: FormGroup = new FormGroup({\n    title: new FormControl('', [Validators.required]),\n    category: new FormControl('', [Validators.required]),\n    time: new FormControl(this.getTimeNow(), [Validators.required]),\n  });\n\n  chores?\n\n  createChore(): void {\n    const chore: IChore = this.choresForm.getRawValue();\n    // this.http.post(this.apiUrl, chore)\n    //   .pipe(first())\n    //   .subscribe({\n    //     next: (response) => {\n    //       console.log(response);\n    //     },\n    //     error: (err) => {\n    //       console.log(err);\n    //     }\n    //   });\n    this.newChoreCreated.emit(chore);\n    alert(\"Tarefa adicionada com sucesso!\");\n  }\n\n  getTimeNow(): string {\n    const time = new Date();\n    const hour = time.getHours();\n    const minutes = time.getMinutes();\n    const convertedTime = `${hour}:${minutes}`;\n    return convertedTime;\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"card mt-5 mx-auto w-50 p-3\">\n    <h5 class=\"card-header d-flex justify-content-center fs-1 mb-3\">Gerencie seu dia</h5>\n    <div class=\"card-body\">\n\n      <form [formGroup]=\"choresForm\" (ngSubmit)=\"createChore()\">\n        <div class=\"mb-3\">\n          <label for=\"chore-title\" class=\"form-label\">Título</label>\n          <input type=\"text\" class=\"form-control\" id=\"chore-title\" placeholder=\"Digite o título da tarefa\" formControlName=\"title\">\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"chore-category\" class=\"form-label\">Categoria</label>\n          <input type=\"text\" class=\"form-control\" id=\"chore-category\" placeholder=\"Digite a categoria da tarefa\" formControlName=\"category\">\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"chore-time\" class=\"form-label\">Hora</label>\n          <input type=\"time\" class=\"form-control\" id=\"chore-time\" formControlName=\"time\">\n        </div>\n        <button class=\"btn btn-success\">Adicionar tarefa</button>\n      </form>\n\n    </div>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}