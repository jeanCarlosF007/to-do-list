{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ClockComponent = class ClockComponent {\n  constructor(cdr) {\n    this.cdr = cdr;\n    this.currentTime = '';\n    this.currentDate = new Date();\n  }\n  ngOnInit() {\n    this.showTime();\n  }\n  ngOnDestroy() {\n    clearInterval(this.intervalId);\n  }\n  showTime() {\n    this.intervalId = setInterval(() => {\n      this.currentTime = `${this.getWeekDay()}, ${this.getMonthDate()}, ${this.getHours()}`;\n    }, 1000);\n  }\n  getWeekDay() {\n    const dayOfWeek = this.currentDate.getDay();\n    switch (dayOfWeek) {\n      case 0:\n        return 'Domingo';\n      case 1:\n        return 'Segunda-Feira';\n      case 2:\n        return 'Terça-Feira';\n      case 3:\n        return 'Quarta-Feira';\n      case 4:\n        return 'Quinta-Feira';\n      case 5:\n        return 'Sexta-Feira';\n      case 6:\n        return 'Sábado';\n      default:\n        return 'Valor inválido';\n    }\n  }\n  getMonthDate() {\n    const currentDay = this.currentDate.getDate();\n    const currentMonth = this.currentDate.getMonth();\n    const currentYear = this.currentDate.getFullYear();\n    switch (currentMonth) {\n      case 0:\n        return `${currentDay} de Janeiro de ${currentYear}`;\n      case 1:\n        return `${currentDay} de Fevereiro de ${currentYear}`;\n      case 2:\n        return `${currentDay} de Março de ${currentYear}`;\n      case 3:\n        return `${currentDay} de Abril de ${currentYear}`;\n      case 4:\n        return `${currentDay} de Maio de ${currentYear}`;\n      case 5:\n        return `${currentDay} de Junho de ${currentYear}`;\n      case 6:\n        return `${currentDay} de Julho de ${currentYear}`;\n      case 7:\n        return `${currentDay} de Agosto de ${currentYear}`;\n      case 8:\n        return `${currentDay} de Setembro de ${currentYear}`;\n      case 9:\n        return `${currentDay} de Outubro de ${currentYear}`;\n      case 10:\n        return `${currentDay} de Novembro de ${currentYear}`;\n      case 11:\n        return `${currentDay} de Dezembro de ${currentYear}`;\n      default:\n        return `Valores inválidos`;\n    }\n  }\n  getHours() {\n    const hours = ('0' + this.currentDate.getHours()).toString().slice(-2);\n    const minutes = ('0' + this.currentDate.getMinutes()).toString().slice(-2);\n    return `${hours}:${minutes}`;\n  }\n};\nClockComponent = __decorate([Component({\n  selector: 'app-clock',\n  templateUrl: './clock.component.html',\n  styleUrls: ['./clock.component.css']\n})], ClockComponent);","map":{"version":3,"names":["Component","ClockComponent","constructor","cdr","currentTime","currentDate","Date","ngOnInit","showTime","ngOnDestroy","clearInterval","intervalId","setInterval","getWeekDay","getMonthDate","getHours","dayOfWeek","getDay","currentDay","getDate","currentMonth","getMonth","currentYear","getFullYear","hours","toString","slice","minutes","getMinutes","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/jean/Documents/ADA/modulo5-to-do/src/app/components/clock/clock.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-clock',\n  templateUrl: './clock.component.html',\n  styleUrls: ['./clock.component.css']\n})\nexport class ClockComponent {\n\n  constructor(private cdr: ChangeDetectorRef) { }\n\n  currentTime: string = '';\n  currentDate = new Date();\n  intervalId: any;\n\n  ngOnInit():void {\n    this.showTime();\n  }\n\n  ngOnDestroy(): void {\n    clearInterval(this.intervalId);\n  }\n\n  showTime(): void {\n    this.intervalId = setInterval(() => {\n      this.currentTime = `${this.getWeekDay()}, ${this.getMonthDate()}, ${this.getHours()}`;\n    }, 1000);\n  }\n\n  getWeekDay(): string {\n    const dayOfWeek = this.currentDate.getDay();\n    switch (dayOfWeek) {\n      case 0:\n        return 'Domingo';\n      case 1:\n        return 'Segunda-Feira';\n      case 2:\n        return 'Terça-Feira';\n      case 3:\n        return 'Quarta-Feira';\n      case 4:\n        return 'Quinta-Feira';\n      case 5:\n        return 'Sexta-Feira';\n      case 6:\n        return 'Sábado';\n      default:\n        return 'Valor inválido';\n    }\n  }\n\n  getMonthDate(): string {\n    const currentDay = this.currentDate.getDate();\n    const currentMonth = this.currentDate.getMonth();\n    const currentYear = this.currentDate.getFullYear();\n\n    switch (currentMonth) {\n      case 0:\n        return `${currentDay} de Janeiro de ${currentYear}`;\n      case 1:\n        return `${currentDay} de Fevereiro de ${currentYear}`;\n      case 2:\n        return `${currentDay} de Março de ${currentYear}`;\n      case 3:\n        return `${currentDay} de Abril de ${currentYear}`;\n      case 4:\n        return `${currentDay} de Maio de ${currentYear}`;\n      case 5:\n        return `${currentDay} de Junho de ${currentYear}`;\n      case 6:\n        return `${currentDay} de Julho de ${currentYear}`;\n      case 7:\n        return `${currentDay} de Agosto de ${currentYear}`;\n      case 8:\n        return `${currentDay} de Setembro de ${currentYear}`;\n      case 9:\n        return `${currentDay} de Outubro de ${currentYear}`;\n      case 10:\n        return `${currentDay} de Novembro de ${currentYear}`;\n      case 11:\n        return `${currentDay} de Dezembro de ${currentYear}`;\n      default:\n        return `Valores inválidos`\n    }\n  }\n\n  getHours(): string {\n    const hours = ('0' + this.currentDate.getHours()).toString().slice(-2);\n    const minutes = ('0' + this.currentDate.getMinutes()).toString().slice(-2);\n    return `${hours}:${minutes}`;\n  }\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}